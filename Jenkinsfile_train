pipeline {
  agent any

  stages {
    stage('Build') {
      steps {
        sh 'docker build -t my-flask-app .'
        sh 'docker tag my-flask-app $DOCKER_BFLASK_IMAGE'
        sh 'docker run -p 5000:5000 -td $DOCKER_BFLASK_IMAGE'
      }
    }
    stage('Retraining model') {
      script {
                   def containerId = docker.image($DOCKER_BFLASK_IMAGE).run('-d').id
                   sh "docker exec ${containerId} python train.py"
                   sh "docker commit ${containerId} $DOCKER_BFLASK_IMAGE"
                }
        //sh 'docker run $DOCKER_BFLASK_IMAGE python train.py'

    }
     stage('Test') {
       steps {
         sh 'docker run $DOCKER_BFLASK_IMAGE python -m pytest evaluate.py'
       }
     }

   stage('Deploy') {
      steps {
        withCredentials([usernamePassword(credentialsId: "${DOCKER_REGISTRY_CREDS}", passwordVariable: 'DOCKER_PASSWORD', usernameVariable: 'DOCKER_USERNAME')]) {
          sh "echo \$DOCKER_PASSWORD | docker login -u \$DOCKER_USERNAME --password-stdin docker.io"
          sh 'docker push $DOCKER_BFLASK_IMAGE'
          sh 'docker run -p 5000:5000 -td $DOCKER_BFLASK_IMAGE'
        }
      }
    }

  }

}